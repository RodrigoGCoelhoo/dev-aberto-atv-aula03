{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem-vindo! Selecione a documenta\u00e7\u00e3o desejada! Documenta\u00e7\u00e3o do Usu\u00e1rio Documenta\u00e7\u00e3o do Desenvolvedor","title":"Bem-vindo!"},{"location":"#bem-vindo","text":"Selecione a documenta\u00e7\u00e3o desejada! Documenta\u00e7\u00e3o do Usu\u00e1rio Documenta\u00e7\u00e3o do Desenvolvedor","title":"Bem-vindo!"},{"location":"index_dev/","text":"Documenta\u00e7\u00e3o de Desenvolvedor Plataforma de Desafios de Design de Software Getting Started Crie um ambiente virtual python -m venv <nome_do_ambiente> Ative o ambiente virtual <nome_do_ambiente>\\Scripts\\activate Rode o seguinte comando no terminal: pip install -r requirements.txt Estrutura do c\u00f3digo O servidor \u00e9 feito em Python, utilizando o framework Flask. Para o banco de dados, utilizamos o SQLite como o sistema de gerenciamento. As funcionalidades, como a gera\u00e7\u00e3o dos desafios, foram implementadas em Python.","title":"Documenta\u00e7\u00e3o de Desenvolvedor"},{"location":"index_dev/#documentacao-de-desenvolvedor","text":"Plataforma de Desafios de Design de Software","title":"Documenta\u00e7\u00e3o de Desenvolvedor"},{"location":"index_dev/#getting-started","text":"Crie um ambiente virtual python -m venv <nome_do_ambiente> Ative o ambiente virtual <nome_do_ambiente>\\Scripts\\activate Rode o seguinte comando no terminal: pip install -r requirements.txt","title":"Getting Started"},{"location":"index_dev/#estrutura-do-codigo","text":"O servidor \u00e9 feito em Python, utilizando o framework Flask. Para o banco de dados, utilizamos o SQLite como o sistema de gerenciamento. As funcionalidades, como a gera\u00e7\u00e3o dos desafios, foram implementadas em Python.","title":"Estrutura do c\u00f3digo"},{"location":"index_user/","text":"Documenta\u00e7\u00e3o de Usu\u00e1rio Plataforma de Desafios de Design de Software Getting Started Rode o seguinte comando no terminal: pip install -r requirements.txt Crie um arquivo users.csv e adicione ao seu conte\u00fado a seguinte estrutura: <seu_nome>,<seu_cargo> Crie um arquivo createdb.py e adicione ao seu conte\u00fado a seguinte estrutura: import sqlite3 with open('quiz.sql', 'r') as sql_file: sql_script = sql_file.read() def createDb(): conn = sqlite3.connect('quiz.db') cursor = conn.cursor() cursor.executescript(sql_script) conn.commit() conn.close() if __name__ == '__main__': createDb() Rode createdb.py Rode useradd.py Rode softdes.py Project Layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Documenta\u00e7\u00e3o de Usu\u00e1rio"},{"location":"index_user/#documentacao-de-usuario","text":"Plataforma de Desafios de Design de Software","title":"Documenta\u00e7\u00e3o de Usu\u00e1rio"},{"location":"index_user/#getting-started","text":"Rode o seguinte comando no terminal: pip install -r requirements.txt Crie um arquivo users.csv e adicione ao seu conte\u00fado a seguinte estrutura: <seu_nome>,<seu_cargo> Crie um arquivo createdb.py e adicione ao seu conte\u00fado a seguinte estrutura: import sqlite3 with open('quiz.sql', 'r') as sql_file: sql_script = sql_file.read() def createDb(): conn = sqlite3.connect('quiz.db') cursor = conn.cursor() cursor.executescript(sql_script) conn.commit() conn.close() if __name__ == '__main__': createDb() Rode createdb.py Rode useradd.py Rode softdes.py","title":"Getting Started"},{"location":"index_user/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project Layout"}]}